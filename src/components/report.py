import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from datetime import datetime
import re
import os
import plotly.graph_objects as go
import plotly.express as px
import base64
from io import BytesIO
import time
from src.config import settings
from src.components import comparison_table

def render_report_section(result_dir):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–µ–∫—Ü–∏—é —Å –æ—Ç—á–µ—Ç–æ–º –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ö–ü –∏–ª–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É."""
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É –ö–ü –∏–ª–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    if "analysis_result" in st.session_state and st.session_state.analysis_result is not None:
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –æ—Ç—á–µ—Ç
        render_single_report_new_structure()
    elif "all_analysis_results" in st.session_state and st.session_state.all_analysis_results:
        # –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –Ω–æ –µ—Å—Ç—å –æ–±—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        st.session_state.current_step = "comparison" # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –º—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —à–∞–≥–µ
        st.rerun() # –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–º, —á—Ç–æ–±—ã app.py –æ—Ç—Ä–∏—Å–æ–≤–∞–ª comparison_table
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ –∏–ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        st.error("–û—à–∏–±–∫–∞: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã.")
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤", use_container_width=True, key="report_back_to_upload"):
                st.session_state.current_step = "upload"
                st.rerun()
        return

def render_single_report_new_structure():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Ç—á–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É –ö–ü —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π 11-–ø—É–Ω–∫—Ç–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ."""
    
    analysis_data = st.session_state.analysis_result
    kp_name = analysis_data["kp_name"]
    company_name = analysis_data.get("company_name", kp_name)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
    tz_name = analysis_data["tz_name"]
    comparison_result = analysis_data["comparison_result"]
    prelim_recommendation = analysis_data["preliminary_recommendation"]
    ratings = analysis_data.get("ratings", {})
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å—Ä–æ–∫–∏, —Å—Ç–æ–∏–º–æ—Å—Ç—å)
    tech_stack = analysis_data.get("tech_stack", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    pricing = analysis_data.get("pricing", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    timeline = analysis_data.get("timeline", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    
    st.title(f"–ê–Ω–∞–ª–∏–∑ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è: {company_name}")
    st.markdown(f"*–ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –¢–ó: {tz_name}*")
    st.divider()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF
    export_cols = st.columns([2, 2, 2])
    with export_cols[1]:
        if st.button("üìÑ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç –≤ PDF", use_container_width=True, key="export_pdf_report"):
            generate_pdf_report_placeholder(company_name)
            
    # --- 1. –†–µ–∑—é–º–µ / –ö–ª—é—á–µ–≤—ã–µ –í—ã–≤–æ–¥—ã (Executive Summary) --- 
    st.markdown("## 1. –†–µ–∑—é–º–µ / –ö–ª—é—á–µ–≤—ã–µ –í—ã–≤–æ–¥—ã")
    with st.container(border=True):
        st.markdown(f"**–¶–µ–ª—å:** –û—Ü–µ–Ω–∫–∞ –ö–ü –∫–æ–º–ø–∞–Ω–∏–∏ '{company_name}' –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó '{tz_name}'.")
        
        compliance_score = comparison_result["compliance_score"]
        if compliance_score >= 80:
            compliance_text = "–í—ã—Å–æ–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è"
        elif compliance_score >= 60:
            compliance_text = "–°—Ä–µ–¥–Ω—è—è —Å—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Ç—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏–π"
        else:
            compliance_text = "–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –¢–ó"
        st.markdown(f"**–û–±—â–∞—è –û—Ü–µ–Ω–∫–∞ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è:** {compliance_text} ({compliance_score}%) ‚ú®")

        # –ö–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã (–±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ N –∏–∑ –∞–Ω–∞–ª–∏–∑–∞)
        st.markdown("**–ö–ª—é—á–µ–≤—ã–µ –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –ú–æ–º–µ–Ω—Ç—ã:**")
        if prelim_recommendation["strength"]:
            for i, strength in enumerate(prelim_recommendation["strength"][:3]): # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 3
                st.markdown(f"  - {strength}")
        else:
            st.markdown("  - *–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
        
        st.markdown("**–ö–ª—é—á–µ–≤—ã–µ –ü—Ä–æ–±–ª–µ–º—ã / –†–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è:**")
        if prelim_recommendation["weakness"]:
            for i, weakness in enumerate(prelim_recommendation["weakness"][:3]): # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 3
                st.markdown(f"  - {weakness}")
        else:
             st.markdown("  - *–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
        
        # –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∏—Ç–æ–≥
        st.markdown(f"**–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ò—Ç–æ–≥:** {pricing} üí∞")

        # –ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
        avg_rating = sum(ratings.values()) / len(ratings) if ratings else 0
        overall_score = (avg_rating * 10 + compliance_score) / 2
        
        if overall_score >= 75:
            recommendation_final = "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –∫ –ø—Ä–∏–Ω—è—Ç–∏—é"
        elif overall_score >= 60:
            recommendation_final = "‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –∫ –¥–æ—Ä–∞–±–æ—Ç–∫–µ/–ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞–º"
        else:
            recommendation_final = "‚ùå –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—é"
        st.markdown(f"**–ò—Ç–æ–≥–æ–≤–∞—è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** {recommendation_final}")
        
    # --- 2. –í–≤–æ–¥–Ω–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è --- 
    st.markdown("## 2. –í–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    with st.container(border=True):
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("**–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ –î–æ–∫—É–º–µ–Ω—Ç—ã:**")
            st.markdown(f"  - **–¢–ó:** {tz_name} (–í–µ—Ä—Å–∏—è/–¥–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã)") # –î–æ–±–∞–≤–∏—Ç—å, –µ—Å–ª–∏ –µ—Å—Ç—å
            st.markdown(f"  - **–ö–ü:** –æ—Ç {company_name} (–í–µ—Ä—Å–∏—è/–¥–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã)") # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
        with col2:
             st.markdown(f"**–ü–æ—Å—Ç–∞–≤—â–∏–∫:** {company_name}")
             st.markdown("**–ö–æ–Ω—Ç–µ–∫—Å—Ç:** –û—Ü–µ–Ω–∫–∞ –ö–ü –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –ø–æ –¢–ó.")
             st.markdown(f"**–î–∞—Ç–∞ –ê–Ω–∞–ª–∏–∑–∞:** {datetime.now().strftime('%d.%m.%Y %H:%M')}")

    # --- 3. –û–±–∑–æ—Ä –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ö–ü) --- 
    st.markdown("## 3. –û–±–∑–æ—Ä –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–ö–ü)")
    with st.container(border=True):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        st.markdown("**–ó–∞—è–≤–ª–µ–Ω–Ω—ã–π –û–±—ä–µ–º –†–∞–±–æ—Ç:**")
        st.markdown(f"  - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤–∫–ª—é—á–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó.")
        
        st.markdown("**–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ –†–µ—à–µ–Ω–∏–µ/–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**")
        st.markdown(f"  - **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:** {tech_stack}")
        
        st.markdown("**–ó–∞—è–≤–ª–µ–Ω–Ω–∞—è –°—Ç–æ–∏–º–æ—Å—Ç—å:**")
        st.markdown(f"  - **–°—Ç–æ–∏–º–æ—Å—Ç—å:** {pricing}")

        st.markdown("**–ó–∞—è–≤–ª–µ–Ω–Ω—ã–µ –°—Ä–æ–∫–∏:**")
        st.markdown(f"  - **–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç:** {timeline}")
        
        st.markdown("**–û—Å–Ω–æ–≤–Ω—ã–µ –î–æ–ø—É—â–µ–Ω–∏—è –∏ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ö–ü:**")
        st.markdown("  - –ó–∞–∫–∞–∑—á–∏–∫ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –¥–æ—Å—Ç—É–ø—ã.")
        st.markdown("  - –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¢–ó –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Å—Ä–æ–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å.")

    # --- 4. –î–µ—Ç–∞–ª—å–Ω–æ–µ –ü–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¢–ó –∏ –ö–ü --- 
    st.markdown("## 4. –î–µ—Ç–∞–ª—å–Ω–æ–µ –ü–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¢–ó –∏ –ö–ü")
    # –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Ç—Ä–µ–±—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –¢–ó –∏ –ö–ü (—Å–ª–æ–∂–Ω–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è AI)
    st.markdown("_–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ AI-–∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –¢–ó –∏ –ö–ü. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è._")
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º (–∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ)
    st.markdown("### –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∞–º (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)")
    sections_data = []
    if "sections" in comparison_result:
        for section in comparison_result["sections"]:
            sections_data.append({
                "–†–∞–∑–¥–µ–ª": section["name"],
                "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ (%)": section["compliance"],
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": section["details"]
            })
        sections_df = pd.DataFrame(sections_data)
        st.dataframe(
            sections_df,
            column_config={
                "–†–∞–∑–¥–µ–ª": st.column_config.TextColumn("–†–∞–∑–¥–µ–ª –¢–ó/–ö–ü"),
                "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ (%)": st.column_config.ProgressColumn(
                    "–û—Ü–µ–Ω–∫–∞ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è", format="%d%%", min_value=0, max_value=100
                ),
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π": st.column_config.TextColumn("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
            },
            hide_index=True,
            use_container_width=True
        )
    else:
        st.warning("–î–∞–Ω–Ω—ã–µ –æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

    # --- 5. –ê–Ω–∞–ª–∏–∑ –ü–æ–ª–Ω–æ—Ç—ã –û—Ö–≤–∞—Ç–∞ –∏ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –û–±—ä–µ–º–∞ –†–∞–±–æ—Ç --- 
    st.markdown("## 5. –ê–Ω–∞–ª–∏–∑ –ü–æ–ª–Ω–æ—Ç—ã –û—Ö–≤–∞—Ç–∞ –∏ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –û–±—ä–µ–º–∞ –†–∞–±–æ—Ç")
    with st.container(border=True):
        col1, col2 = st.columns(2)
        with col1:
            st.markdown("**–ù–µ–ø–æ–∫—Ä—ã—Ç—ã–µ –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –¢–ó:**")
            if comparison_result["missing_requirements"]:
                for req in comparison_result["missing_requirements"]:
                    st.markdown(f"  - üî¥ {req}")
            else:
                st.markdown("  - *–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
        with col2:
            st.markdown("**–ò–∑–±—ã—Ç–æ—á–Ω—ã–µ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ö–ü:**")
            if comparison_result["additional_features"]:
                for feature in comparison_result["additional_features"]:
                    st.markdown(f"  - üü¢ {feature}")
            else:
                st.markdown("  - *–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
        st.divider()
        st.markdown(f"**–û–±—â–∞—è –û—Ü–µ–Ω–∫–∞:** –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –æ–±—ä–µ–º —Ä–∞–±–æ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–º—É –Ω–∞ {compliance_score}%. –í—ã—è–≤–ª–µ–Ω—ã {len(comparison_result['missing_requirements'])} –Ω–µ–ø–æ–∫—Ä—ã—Ç—ã—Ö –∏ {len(comparison_result['additional_features'])} –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –ø—É–Ω–∫—Ç–∞.")

    # --- 6. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê–Ω–∞–ª–∏–∑ (–î–µ—Ç–∞–ª—å–Ω—ã–π –†–∞–∑–±–æ—Ä –¶–µ–Ω—ã) --- 
    st.markdown("## 6. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê–Ω–∞–ª–∏–∑")
    with st.container(border=True):
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–µ
        st.markdown(f"**–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¶–µ–Ω—ã:** {pricing}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
        if "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞" in pricing:
            st.markdown("**–¢–∏–ø —Ü–µ–Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏:** üìå –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ (Fixed Price)")
            st.markdown("**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:** –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –∑–∞—Ç—Ä–∞—Ç, —á–µ—Ç–∫–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.")
            st.markdown("**–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:** –ú–µ–Ω—å—à–∞—è –≥–∏–±–∫–æ—Å—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π, –≤–æ–∑–º–æ–∂–Ω–∞ –∏–∑–±—ã—Ç–æ—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º.")
        elif "T&M" in pricing:
            st.markdown("**–¢–∏–ø —Ü–µ–Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏:** ‚è±Ô∏è Time & Materials (T&M)")
            st.markdown("**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:** –ì–∏–±–∫–æ—Å—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∑–∞—Ç—Ä–∞—Ç.")
            st.markdown("**–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:** –ú–µ–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã, —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ —Ç—â–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∑–∞–∫–∞–∑—á–∏–∫–∞.")
        elif "–°–º–µ—à–∞–Ω–Ω–∞—è" in pricing:
            st.markdown("**–¢–∏–ø —Ü–µ–Ω–æ–≤–æ–π –º–æ–¥–µ–ª–∏:** üîÑ –°–º–µ—à–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å")
            st.markdown("**–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:** –ë–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å—é –∏ –≥–∏–±–∫–æ—Å—Ç—å—é, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–æ–≤.")
            st.markdown("**–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏:** –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–µ–µ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–∏, —Ç—Ä–µ–±—É–µ—Ç —á–µ—Ç–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü.")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å —Ä—ã–Ω–∫–æ–º
        import re
        price_match = re.search(r'([0-9,]+,?[0-9]*)', pricing)
        if price_match:
            price_str = price_match.group(1)
            price_value = float(price_str.replace(',', ''))
            
            # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä—ã–Ω–æ—á–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏ (–∑–∞–≥–ª—É—à–∫–∞)
            if price_value > 5000000:
                market_position = "–≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ—Ä—ã–Ω–æ—á–Ω–æ–π"
            elif price_value > 4000000:
                market_position = "–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Å—Ä–µ–¥–Ω–µ—Ä—ã–Ω–æ—á–Ω–æ–π"
            else:
                market_position = "–Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ—Ä—ã–Ω–æ—á–Ω–æ–π"
                
            st.markdown(f"**–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä—ã–Ω–∫–æ–º:** –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å **{market_position}** –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–¥–æ–±–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.")
        
        st.markdown("**–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∫—Ä—ã—Ç—ã–µ –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã:**")
        st.markdown("  - –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
        st.markdown("  - –ó–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
        st.markdown("  - –í–æ–∑–º–æ–∂–Ω—ã–µ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")

    # --- 7. –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤ –∏ –£–≥—Ä–æ–∑ --- 
    st.markdown("## 7. –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤ –∏ –£–≥—Ä–æ–∑")
    with st.container(border=True):
        # –¢—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑
        st.markdown("–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ö–ü –∏ –¢–ó.")
        st.markdown("–í—Ä–µ–º–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç: –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–π —Å –¢–ó.")

    # --- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å ---
    if "additional_info_analysis" in analysis_data and analysis_data["additional_info_analysis"]:
        render_additional_info_section(analysis_data["additional_info_analysis"])

    # --- 8. –û—Ü–µ–Ω–∫–∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –†–µ—à–µ–Ω–∏—è –∏ –ü–æ–¥—Ö–æ–¥–∞ (–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ê–Ω–∞–ª–∏–∑) --- 
    st.markdown("## 8. –û—Ü–µ–Ω–∫–∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –†–µ—à–µ–Ω–∏—è –∏ –ü–æ–¥—Ö–æ–¥–∞")
    with st.container(border=True):
        # –¢—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –ö–ü
        st.markdown("**–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:** _(–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ö–ü)_ ")
        st.markdown("**–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å, –ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** _(–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ö–ü)_ ")

    # --- 9. –û—Ü–µ–Ω–∫–∞ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞ --- 
    st.markdown("## 9. –û—Ü–µ–Ω–∫–∞ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞")
    with st.container(border=True):
        # –¢—Ä–µ–±—É–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –ö–ü –∏/–∏–ª–∏ –≤–Ω–µ—à–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        st.markdown("**–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ó–∞–¥–∞—á–∏:** _(–û—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –ö–ü)_ ")
        st.markdown("**–ö–∞—á–µ—Å—Ç–≤–æ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ö–ü:** _(–û—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, —è—Å–Ω–æ—Å—Ç–∏, –ø–æ–ª–Ω–æ—Ç–µ)_ ")
        st.markdown("**–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –û–ø—ã—Ç:** _(–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑ –ö–ü –∏–ª–∏ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤)_ ")

    # --- 10. –°–≤–æ–¥–Ω—ã–π –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤ --- 
    st.markdown("## 10. –°–≤–æ–¥–Ω—ã–π –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤")
    with st.container(border=True):
        # –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≥—Ä–µ–≥–∞—Ü–∏—è —Ä–∏—Å–∫–æ–≤ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –ø—É–Ω–∫—Ç–æ–≤
        st.markdown("**–û—Å–Ω–æ–≤–Ω—ã–µ –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –†–∏—Å–∫–∏:**")
        st.markdown("  - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ: _(–ü—Ä–∏–º–µ—Ä: —Ä–∏—Å–∫ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏...)_ ")
        st.markdown("  - –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ: _(–ü—Ä–∏–º–µ—Ä: —Ä–∏—Å–∫ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–∞...)_ ")
        st.markdown("  - –í—Ä–µ–º–µ–Ω–Ω—ã–µ: _(–ü—Ä–∏–º–µ—Ä: —Ä–∏—Å–∫ —Å—Ä—ã–≤–∞ —Å—Ä–æ–∫–æ–≤ —ç—Ç–∞–ø–∞ X...)_ ")
        st.markdown("  - –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ: _(–ü—Ä–∏–º–µ—Ä: —Ä–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞...)_ ")
        st.markdown("**–û—Ü–µ–Ω–∫–∞ –ö–ª—é—á–µ–≤—ã—Ö –†–∏—Å–∫–æ–≤:** _(–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑)_ ")

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É
    avg_rating = sum(ratings.values()) / len(ratings)
    compliance = comparison_result["compliance_score"]
    overall_score = (avg_rating * 10 + compliance) / 2  # –®–∫–∞–ª–∞ 0-100
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    has_additional_info = analysis_data.get("additional_info_analysis") is not None
    additional_info_modifier = analysis_data.get("additional_info_analysis", {}).get("rating_impact", 0)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if has_additional_info and additional_info_modifier > 0:
        st.markdown(f"""
        <div style="padding: 10px 15px; background-color: #f0f9ff; border-radius: 5px; margin: 15px 0; border-left: 4px solid #3b82f6;">
            <p style="margin:0; font-weight:500;">
                ‚≠ê –†–µ–π—Ç–∏–Ω–≥ —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ <strong>{additional_info_modifier}</strong> –±–∞–ª–ª–∞ 
                –±–ª–∞–≥–æ–¥–∞—Ä—è —É—á–µ—Ç—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!
            </p>
        </div>
        """, unsafe_allow_html=True)

    # --- 11. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (–ò—Ç–æ–≥) --- 
    st.markdown("## 11. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
    with st.container(border=True):
        st.markdown("**–ò—Ç–æ–≥–æ–≤–∞—è –û—Ü–µ–Ω–∫–∞ –ö–ü:**")
        st.markdown(f"  - –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç '{company_name}' –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç {compliance_text.lower()} ({compliance_score}%) —Å –¢–ó '{tz_name}'.")
        st.markdown("  - **–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:** " + ", ".join(prelim_recommendation["strength"])
                      if prelim_recommendation["strength"] else "*–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
        st.markdown("  - **–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:** " + ", ".join(prelim_recommendation["weakness"])
                      if prelim_recommendation["weakness"] else "*–ù–µ –≤—ã—è–≤–ª–µ–Ω–æ*")
                      
        st.markdown("**–°–ø–∏—Å–æ–∫ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –í–æ–ø—Ä–æ—Å–æ–≤ / –ü—É–Ω–∫—Ç–æ–≤ –¥–ª—è –ü–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤:**")
        critical_points = prelim_recommendation["weakness"] + comparison_result["missing_requirements"]
        if critical_points:
             for i, point in enumerate(critical_points[:5]): # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 5
                 st.markdown(f"  {i+1}. {point}")
        else:
            st.markdown("  - *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ*")

        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è (–ø–æ–≤—Ç–æ—Ä –∏–∑ —Ä–µ–∑—é–º–µ)
        st.markdown(f"**–ß–µ—Ç–∫–∞—è –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:**")
        st.markdown(f"### {recommendation_final}")

        st.markdown("**–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –°–ª–µ–¥—É—é—â–∏–µ –®–∞–≥–∏:**")
        # –®–∞–≥–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if "–ü—Ä–∏–Ω—è—Ç—å" in recommendation_final:
            st.markdown("  - –ù–∞—á–∞—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –¥–æ–≥–æ–≤–æ—Ä–∞.")
            st.markdown("  - –°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–±–æ—Ç.")
        elif "–î–æ—Ä–∞–±–æ—Ç–∞—Ç—å" in recommendation_final or "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã" in recommendation_final:
            st.markdown("  - –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏—è –ø–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º.")
            st.markdown("  - –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤—Å—Ç—Ä–µ—á—É –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ü–µ–Ω—ã/—Å—Ä–æ–∫–æ–≤/—É—Å–ª–æ–≤–∏–π.")
        else: # –û—Ç–∫–ª–æ–Ω–∏—Ç—å
            st.markdown("  - –£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
            st.markdown("  - –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å). ")
            
    # --- 12. –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ (–Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª) ---
    if "all_analysis_results" in st.session_state and len(st.session_state.all_analysis_results) > 1:
        st.markdown("## 12. –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
        
        with st.container(border=True):
            st.markdown("### –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –ö–ü")
            
            # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            table_data = []
            
            for analysis in st.session_state.all_analysis_results:
                kp_name = analysis["kp_name"]
                comp_name = analysis.get("company_name", kp_name)
                
                is_current = comp_name == company_name
                
                # –°–æ–∫—Ä–∞—â–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –ø–µ—Ä–µ–Ω–æ—Å —Ç–µ–∫—Å—Ç–∞
                kp_info = {
                    "–ù–∞–∑–≤–∞–Ω–∏–µ": comp_name + (" ‚òÖ" if is_current else ""),
                    "–°–æ–æ—Ç–≤.": f"{analysis['comparison_result']['compliance_score']}%",
                    "–¶–µ–Ω–∞": analysis.get("pricing", "‚Äî").split(':')[-1].strip() if ":" in analysis.get("pricing", "‚Äî") else analysis.get("pricing", "‚Äî"),
                    "–°—Ä–æ–∫–∏": analysis.get("timeline", "‚Äî").split(':')[-1].strip() if ":" in analysis.get("timeline", "‚Äî") else analysis.get("timeline", "‚Äî"),
                    "–†–µ–π—Ç–∏–Ω–≥": f"{round(sum(analysis.get('ratings', {}).values()) / len(analysis.get('ratings', {1: 0})), 1)}/10" if analysis.get('ratings') else "‚Äî",
                }
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ö–ü
                if is_current:
                    # –û—Ç–º–µ—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –ö–ü –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
                    kp_info["_current"] = True
                
                table_data.append(kp_info)
            
            # –°–æ–∑–¥–∞–µ–º DataFrame –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
            comparison_df = pd.DataFrame(table_data)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            st.markdown("–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –≤–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–µ (–æ—Ç–º–µ—á–µ–Ω–æ –∑–≤–µ–∑–¥–æ—á–∫–æ–π ‚òÖ):")
            st.dataframe(
                comparison_df,
                column_config={
                    "–ù–∞–∑–≤–∞–Ω–∏–µ": st.column_config.TextColumn("–ö–æ–º–ø–∞–Ω–∏—è", width="medium"),
                    "–°–æ–æ—Ç–≤.": st.column_config.TextColumn("–°–æ–æ—Ç–≤. –¢–ó", width="small"),
                    "–¶–µ–Ω–∞": st.column_config.TextColumn("–°—Ç–æ–∏–º–æ—Å—Ç—å", width="medium"),
                    "–°—Ä–æ–∫–∏": st.column_config.TextColumn("–°—Ä–æ–∫–∏", width="medium"),
                    "–†–µ–π—Ç–∏–Ω–≥": st.column_config.TextColumn("–†–µ–π—Ç–∏–Ω–≥", width="small"),
                },
                hide_index=True,
                use_container_width=True,
                column_order=["–ù–∞–∑–≤–∞–Ω–∏–µ", "–°–æ–æ—Ç–≤.", "–¶–µ–Ω–∞", "–°—Ä–æ–∫–∏", "–†–µ–π—Ç–∏–Ω–≥"],
                height=220 if len(table_data) > 4 else 180,  # –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –≤—ã—Å–æ—Ç–∞
            )
            
            st.markdown("### –í—ã–≤–æ–¥—ã —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
            st.markdown("–ü—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏, –¥–∞–Ω–Ω–æ–µ –ö–ü:")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—É—â–µ–≥–æ –ö–ü —Å—Ä–µ–¥–∏ –¥—Ä—É–≥–∏—Ö
            current_compliance = comparison_result["compliance_score"]
            all_compliances = [a["comparison_result"]["compliance_score"] for a in st.session_state.all_analysis_results]
            sorted_compliances = sorted(all_compliances, reverse=True)
            position = sorted_compliances.index(current_compliance) + 1
            total = len(all_compliances)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
            if position == 1:
                st.markdown(f"- –ò–º–µ–µ—Ç **–Ω–∞–∏–ª—É—á—à—É—é —Å—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è** –¢–ó ({current_compliance}%) —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
            elif position == total:
                st.markdown(f"- –ò–º–µ–µ—Ç **–Ω–∞–∏–º–µ–Ω—å—à—É—é —Å—Ç–µ–ø–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è** –¢–ó ({current_compliance}%) —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
            else:
                st.markdown(f"- –ù–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ **{position} –º–µ—Å—Ç–µ –∏–∑ {total}** –ø–æ —Å—Ç–µ–ø–µ–Ω–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¢–ó ({current_compliance}%)")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –∏—Ç–æ–≥–∞–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            st.markdown("**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è:**")
            if position == 1 and overall_score >= 75:
                st.markdown("‚úÖ –î–∞–Ω–Ω–æ–µ –ö–ü —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–º —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö.")
            elif position <= total / 3 and overall_score >= 60:
                st.markdown("‚úÖ –î–∞–Ω–Ω–æ–µ –ö–ü –≤—Ö–æ–¥–∏—Ç –≤ —á–∏—Å–ª–æ –ª–∏–¥–µ—Ä–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é.")
            elif position <= total / 2:
                st.markdown("‚ö†Ô∏è –î–∞–Ω–Ω–æ–µ –ö–ü –∏–º–µ–µ—Ç —Å—Ä–µ–¥–Ω—é—é –ø–æ–∑–∏—Ü–∏—é, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –±–æ–ª–µ–µ —Å–∏–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
            else:
                st.markdown("‚ùå –î–∞–Ω–Ω–æ–µ –ö–ü –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å—Ä–µ–¥–∏ –∞—É—Ç—Å–∞–π–¥–µ—Ä–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–¥–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.")
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    st.divider()
    col1, col2, col3 = st.columns([2, 3, 2]) # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" —à–∏—Ä–µ
    
    with col1:
        if st.button("‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ", use_container_width=True, key="report_back_to_comp"):
            st.session_state.analysis_result = None # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            st.session_state.current_step = "comparison"
            st.rerun()
    
    with col2:
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞
        if st.button(f"üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ {company_name}", use_container_width=True, key="report_save_btn_new"):
            generate_pdf_report_placeholder(company_name)

def generate_pdf_report_placeholder(company_name):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF-–æ—Ç—á–µ—Ç–∞."""
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    with st.spinner(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF-–æ—Ç—á–µ—Ç–∞ –¥–ª—è {company_name}..."):
        # –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        progress_bar = st.progress(0)
        for i in range(101):
            time.sleep(0.02)  # –ò–º–∏—Ç–∞—Ü–∏—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
            progress_bar.progress(i)
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        progress_bar.empty()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        st.success("‚úÖ –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ PDF –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")

def render_additional_info_section(additional_info):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å"""
    
    if not additional_info:
        return
    
    st.markdown("""
    <div style='background-color: #f0fdf4; padding: 15px; border-radius: 5px; margin-top: 20px; border-left: 4px solid #22c55e;'>
        <h4 style='color: #15803d; margin-top: 0;'>üåü –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h4>
    """, unsafe_allow_html=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    if "key_findings" in additional_info and additional_info["key_findings"]:
        st.markdown("<h5>–ö–ª—é—á–µ–≤—ã–µ –≤—ã–≤–æ–¥—ã:</h5>", unsafe_allow_html=True)
        for finding in additional_info["key_findings"]:
            st.markdown(f"‚Ä¢ {finding}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∏—è–Ω–∏–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if "impact" in additional_info and additional_info["impact"]:
        st.markdown("<h5>–í–ª–∏—è–Ω–∏–µ –Ω–∞ –æ—Ü–µ–Ω–∫—É:</h5>", unsafe_allow_html=True)
        st.markdown(additional_info["impact"])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–ª–∏—è–Ω–∏–∏ –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if "rating_impact" in additional_info:
            st.markdown(f"""
            <div style='margin-top: 10px; padding: 10px; background-color: #ecfdf5; border-radius: 4px;'>
                <strong>–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞:</strong> +{additional_info["rating_impact"]} (—Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É)
            </div>
            """, unsafe_allow_html=True)
            
    st.markdown("</div>", unsafe_allow_html=True)

# --- –°—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã –ø–æ–∑–∂–µ, –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è) --- 
# def render_single_report(result_dir): ...
# def create_gauge_chart(value, title, height=400, max_value=100): ...
# def create_radar_chart(height=400): ... 