import streamlit as st
import pandas as pd
import time
from pathlib import Path
from src.config import settings
from src.utils import file_utils
from src.services import ai_service
import json
import random

def run_single_analysis(tz_file, kp_file, additional_files):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ –ö–ü –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ –¢–ó –∏ –¥–æ–ø. —Ñ–∞–π–ª–∞–º —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º AI."""
    
    st.info(f"–ê–Ω–∞–ª–∏–∑ –ö–ü: {kp_file['original_name']}...")
    
    try:
        # 1. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–æ–≤
        tz_text = file_utils.extract_text_from_file(Path(tz_file["file_path"]))
        if not tz_text:
            st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ –¢–ó: {tz_file['original_name']}")
            return None
            
        kp_text = file_utils.extract_text_from_file(Path(kp_file["file_path"]))
        if not kp_text:
            st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ –ö–ü: {kp_file['original_name']}")
            return None
        
        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤ (–º–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å)
        MAX_LEN = 30000 # –ü—Ä–∏–º–µ—Ä–Ω–æ 7-8 —Ç—ã—Å. —Ç–æ–∫–µ–Ω–æ–≤
        if len(tz_text) > MAX_LEN:
            st.warning(f"–¢–µ–∫—Å—Ç –¢–ó ({tz_file['original_name']}) —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –¥–æ {MAX_LEN} —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            tz_text = tz_text[:MAX_LEN]
        if len(kp_text) > MAX_LEN:
             st.warning(f"–¢–µ–∫—Å—Ç –ö–ü ({kp_file['original_name']}) —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π, –±—É–¥–µ—Ç –æ–±—Ä–µ–∑–∞–Ω –¥–æ {MAX_LEN} —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
             kp_text = kp_text[:MAX_LEN]

        # === –í—ã–∑–æ–≤ AI —Å–µ—Ä–≤–∏—Å–æ–≤ ===
        
        # 2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ö–ü
        st.write(f"- –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ {kp_file['original_name']}...")
        kp_summary_data = ai_service.extract_kp_summary_data(kp_text)
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        time.sleep(random.uniform(0.5, 1.5))

        # 3. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¢–ó –∏ –ö–ü
        st.write(f"- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ {kp_file['original_name']} —Å –¢–ó...")
        comparison_result = ai_service.compare_tz_kp(tz_text, kp_text)
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏ –¥–ª—è –¥–µ–º–æ
        compliance_score = comparison_result.get("compliance_score", 0)
        comparison_result["sections"] = [
            {"name": "–û–±—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", "compliance": random.randint(max(0, compliance_score-10), min(100, compliance_score+10)), "details": "(–î–µ—Ç–∞–ª–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–µ–∫—Ü–∏–π)"},
            {"name": "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", "compliance": random.randint(max(0, compliance_score-15), min(100, compliance_score+5)), "details": "(–î–µ—Ç–∞–ª–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–µ–∫—Ü–∏–π)"},
            {"name": "–ù–µ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è", "compliance": random.randint(max(0, compliance_score-20), min(100, compliance_score+15)), "details": "(–î–µ—Ç–∞–ª–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å–µ–∫—Ü–∏–π)"},
        ]
        time.sleep(random.uniform(0.5, 1.5))

        # 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        st.write(f"- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –≤—ã–≤–æ–¥–æ–≤ –ø–æ {kp_file['original_name']}...")
        preliminary_recommendation = ai_service.generate_recommendation(comparison_result, kp_summary_data)
        time.sleep(random.uniform(0.5, 1.5))

        # 5. –ê–Ω–∞–ª–∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
        additional_info_analysis = None
        if additional_files:
            st.write(f"- –ê–Ω–∞–ª–∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è {kp_file['original_name']}...")
            # –†–µ–∞–ª–∏–∑—É–µ–º –∞–Ω–∞–ª–∏–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ - —ç—Ç–æ –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–µ–π—Ç–∏–Ω–≥
            additional_info_analysis = {
                "key_findings": ["–£—á–∏—Ç—ã–≤–∞—é –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞"],
                "impact": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–º–µ–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É",
                "rating_impact": 2.0  # –î–æ–±–∞–≤–ª—è–µ–º –∑–Ω–∞—á–∏–º—ã–π –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫ —Ä–µ–π—Ç–∏–Ω–≥—É (2 –∏–∑ 10)
            }
            time.sleep(1)

        # 6. –†–µ–π—Ç–∏–Ω–≥–∏ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞ - —Å–ª—É—á–∞–π–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
        base_ratings = {c["id"]: random.randint(3, 9) for c in settings.EVALUATION_CRITERIA}
        
        # –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∏ —Å —É—á–µ—Ç–æ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        ratings = base_ratings.copy()
        if additional_info_analysis and "rating_impact" in additional_info_analysis:
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ –≤—Å–µ–º —Ä–µ–π—Ç–∏–Ω–≥–∞–º, –Ω–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –º–∞–∫—Å–∏–º—É–º–∞ 10
            for key in ratings:
                ratings[key] = min(10, ratings[key] + additional_info_analysis["rating_impact"])
            st.info(f"–†–µ–π—Ç–∏–Ω–≥ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É –±–ª–∞–≥–æ–¥–∞—Ä—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (+{additional_info_analysis['rating_impact']} –±–∞–ª–ª–∞)")
        
        comments = {} # –ü—É—Å—Ç—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
        # === –ö–æ–Ω–µ—Ü –≤—ã–∑–æ–≤–æ–≤ AI —Å–µ—Ä–≤–∏—Å–æ–≤ ===

        st.success(f"–ê–Ω–∞–ª–∏–∑ {kp_file['original_name']} –∑–∞–≤–µ—Ä—à–µ–Ω.")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ö–ü
        analysis_output = {
            "tz_name": tz_file["original_name"],
            "kp_name": kp_file["original_name"],
            "company_name": kp_summary_data.get("company_name", "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"),
            "tech_stack": kp_summary_data.get("tech_stack", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "pricing": kp_summary_data.get("pricing", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "timeline": kp_summary_data.get("timeline", "–ù–µ —É–∫–∞–∑–∞–Ω–æ"),
            "comparison_result": comparison_result, 
            "additional_info_analysis": additional_info_analysis,
            "preliminary_recommendation": preliminary_recommendation,
            "ratings": ratings, 
            "comments": comments
        }
        return analysis_output
        
    except Exception as e:
        st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ {kp_file['original_name']}: {e}")
        import traceback
        st.error(traceback.format_exc())
        return None

def render_analysis_section():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∞–Ω–∞–ª–∏–∑–∞ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ö–ü."""
    
    st.header("–ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", anchor=False)

    if not st.session_state.uploaded_files["tz"] or not st.session_state.uploaded_files["kp"]:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¢–ó –∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ö–ü –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ.")
        if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ"): 
            st.session_state.current_step = "upload"
            st.rerun()
        return

    # –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω –∏–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
    if st.session_state.get("run_full_analysis"):
        
        tz_file = st.session_state.uploaded_files["tz"]
        kp_files = st.session_state.uploaded_files["kp"]
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º .get() –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ–ø. —Ñ–∞–π–ª–æ–≤
        additional_files = st.session_state.uploaded_files.get("additional", [])
        
        total_files = len(kp_files)
        st.session_state.all_analysis_results = [] # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        
        # –°—Ç–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ä—Ç–µ –∞–Ω–∞–ª–∏–∑–∞
        st.markdown(f"""
        <div style='background-color: #f0f7ff; padding: 15px 20px; border-radius: 10px; margin-bottom: 20px; border-left: 4px solid {settings.BRAND_COLORS["primary"]}'>
            <h3 style='margin:0 0 10px 0; color: {settings.BRAND_COLORS["primary"]}; font-size: 1.2rem;'>ü§ñ –ó–∞–ø—É—Å–∫ AI-–∞–Ω–∞–ª–∏–∑–∞</h3>
            <p style='margin:0; font-size: 0.95rem;'>
                –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é <b>{total_files}</b> –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.
                <br>–ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å: <b>{st.session_state.selected_model}</b>
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º
        analysis_container = st.container(border=False)
        with analysis_container:
            # –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞
            progress_container = st.container()
            with progress_container:
                # –°–æ–∑–¥–∞–µ–º placeholder –¥–ª—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
                progress_text_ph = st.empty()
                progress_bar = st.progress(0)
                
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø –ø–æ–¥ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
            st.markdown("<div style='height: 10px'></div>", unsafe_allow_html=True)
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ—Ü–µ—Å—Å–∞
            status_card_container = st.container()
            with status_card_container:
                st.markdown("""
                <div style='background-color: white; border-radius: 10px; box-shadow: 0 1px 3px rgba(0,0,0,0.12); padding: 15px 20px; margin-bottom: 10px;'>
                    <h4 style='margin:0 0 10px 0; color: #1A1E3A; font-size: 1.1rem;'>üìä –î–µ—Ç–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞</h4>
                </div>
                """, unsafe_allow_html=True)
                status_placeholder = st.empty()

        for i, kp_file in enumerate(kp_files):
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            completion_pct = (i + 1) / total_files
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞–¥ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
            progress_text = f"–ê–Ω–∞–ª–∏–∑ {i+1} –∏–∑ {total_files} –ö–ü: {kp_file['original_name']}"
            progress_text_ph.markdown(f"""
            <div style='color: {settings.BRAND_COLORS["secondary"]}; font-weight: 500; padding: 5px 0; margin-bottom: 5px;'>
                {progress_text} ({int(completion_pct * 100)}%)
            </div>
            """, unsafe_allow_html=True)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
            progress_bar.progress(completion_pct)
            
            # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç—É—Å –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            with status_placeholder.container(): 
                result = run_single_analysis(tz_file, kp_file, additional_files)
            
            if result:
                st.session_state.all_analysis_results.append(result)
            else:
                st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª: {kp_file['original_name']}. –û–Ω –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω.")
                # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å –∫—Ä–∞—Å–∏–≤—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
        progress_text_ph.empty()
        progress_bar.empty()
        
        st.markdown(f"""
        <div style='background-color: #ecfdf5; padding: 15px 20px; border-radius: 10px; margin: 20px 0; border-left: 4px solid #10B981;'>
            <h3 style='margin:0 0 5px 0; color: #065f46; font-size: 1.2rem;'>‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω</h3>
            <p style='margin:0; font-size: 0.95rem; color: #065f46;'>
                –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {total_files} –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.
                <br>–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ...
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        time.sleep(1.5)
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –∞–Ω–∞–ª–∏–∑ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ
        st.session_state.run_full_analysis = False 
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
        st.session_state.current_step = "comparison"
        st.rerun()
        
    else:
        # –ö—Ä–∞—Å–∏–≤–æ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 
        st.markdown(f"""
        <div style='background-color: #f8f9fa; padding: 20px; border-radius: 10px; text-align: center; margin: 30px 0; border: 1px solid #e2e8f0;'>
            <img src="https://cdn-icons-png.flaticon.com/512/1162/1162914.png" width="80" style="margin-bottom: 15px;">
            <h3 style='margin:0 0 10px 0; color: {settings.BRAND_COLORS["secondary"]}; font-size: 1.3rem;'>–ê–Ω–∞–ª–∏–∑ –µ—â–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω</h3>
            <p style='margin:0 0 20px 0; color: {settings.BRAND_COLORS["light_text"]}; font-size: 1rem;'>
                –í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –ö–ü"
            </p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            if st.button("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤", use_container_width=True): 
                st.session_state.current_step = "upload"
                st.rerun()

def get_section_compliance_color(compliance_score):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–∞–∑–¥–µ–ª–∞"""
    if compliance_score >= 80:
        return "#28a745"  # –ó–µ–ª–µ–Ω—ã–π
    elif compliance_score >= 60:
        return "#17a2b8"  # –ì–æ–ª—É–±–æ–π
    elif compliance_score >= 40:
        return "#ffc107"  # –ñ–µ–ª—Ç—ã–π
    else:
        return "#dc3545"  # –ö—Ä–∞—Å–Ω—ã–π 