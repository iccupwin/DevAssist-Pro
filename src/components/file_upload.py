import streamlit as st
import os
from pathlib import Path
import uuid
from src.config import settings
from src.utils import file_utils


def render_upload_section(upload_dir: Path = settings.UPLOAD_DIR):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–µ–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ session_state –ø–æ–¥ –∫–ª—é—á–∞–º–∏ tz, kp, additional."""
    
    st.header("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", anchor=False)
    st.markdown("""
    <div style='background-color: #f8f9fa; padding: 12px 15px; border-radius: 8px; border-left: 4px solid #2E75D6; margin-bottom: 25px;'>
        <p style='margin:0; font-size: 0.95rem;'>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏—Ö —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å –ø–æ–º–æ—â—å—é AI</p>
    </div>
    """, unsafe_allow_html=True)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã - –¢–ó –∏ –ö–ü
    row1_cols = st.columns([1, 1])
    
    with row1_cols[0]:
        st.markdown("""
        <div style='background-color: white; padding: 15px 20px; border-radius: 10px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); height: 100%;'>
            <h3 style='font-size: 1.2rem; color: #1A1E3A; margin-bottom: 10px;'>üìÑ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ</h3>
            <p style='color: #64748B; font-size: 0.9rem; margin-bottom: 15px;'>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –¢–ó –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF –∏–ª–∏ DOCX</p>
        </div>
        """, unsafe_allow_html=True)
        
        tz_file_uploader = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¢–ó",
            type=["pdf", "docx"],
            key="tz_uploader",
            accept_multiple_files=False,
            label_visibility="collapsed"
        )
        
        if tz_file_uploader is not None:
            file_extension = os.path.splitext(tz_file_uploader.name)[1].lower()
            unique_filename = f"tz_{uuid.uuid4().hex}{file_extension}"
            file_path = upload_dir / unique_filename
            file_utils.save_uploaded_file(tz_file_uploader, file_path)
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á "tz"
            st.session_state.uploaded_files["tz"] = {
                "original_name": tz_file_uploader.name,
                "file_path": str(file_path),
                "extension": file_extension
            }
            st.success(f"‚úÖ –§–∞–π–ª '{tz_file_uploader.name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
    
    with row1_cols[1]:
        st.markdown("""
        <div style='background-color: white; padding: 15px 20px; border-radius: 10px; box-shadow: 0 1px 3px rgba(0,0,0,0.1); height: 100%;'>
            <h3 style='font-size: 1.2rem; color: #1A1E3A; margin-bottom: 10px;'>üìë –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h3>
            <p style='color: #64748B; font-size: 0.9rem; margin-bottom: 15px;'>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ –ö–ü</p>
        </div>
        """, unsafe_allow_html=True)
        
        kp_files_uploader = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã –ö–ü",
            type=["pdf", "docx"],
            key="kp_uploader",
            accept_multiple_files=True,
            label_visibility="collapsed"
        )
        
        if kp_files_uploader:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á "kp"
            st.session_state.uploaded_files["kp"] = [] 
            
            for kp_file in kp_files_uploader:
                file_extension = os.path.splitext(kp_file.name)[1].lower()
                unique_filename = f"kp_{uuid.uuid4().hex}{file_extension}"
                file_path = upload_dir / unique_filename
                file_utils.save_uploaded_file(kp_file, file_path)
                
                st.session_state.uploaded_files["kp"].append({
                    "original_name": kp_file.name,
                    "file_path": str(file_path),
                    "extension": file_extension
                })
            
            # –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–æ–≤
            st.markdown(f"""
            <div style='background-color: #ecfdf5; padding: 10px 15px; border-radius: 6px; margin-top: 10px;'>
                <p style='margin:0; color: #065f46; font-size: 0.9rem;'>
                    ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(kp_files_uploader)} –ö–ü:
                </p>
                <ul style='margin: 5px 0 0 0; padding-left: 20px; color: #065f46; font-size: 0.85rem;'>
                    {"".join([f"<li>{file.name}</li>" for file in kp_files_uploader])}
                </ul>
            </div>
            """, unsafe_allow_html=True)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —Å –æ—Ç—Å—Ç—É–ø–æ–º —Å–≤–µ—Ä—Ö—É
    st.markdown("<div style='margin-top: 30px;'></div>", unsafe_allow_html=True)
    
    st.markdown("""
    <div style='background-color: white; padding: 15px 20px; border-radius: 10px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>
        <h3 style='font-size: 1.2rem; color: #1A1E3A; margin-bottom: 10px;'>üìå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</h3>
        <p style='color: #64748B; font-size: 0.9rem; margin-bottom: 15px;'>
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (–ø—Ä–æ—Ç–æ–∫–æ–ª—ã –≤—Å—Ç—Ä–µ—á, –æ—Ç—á–µ—Ç—ã, –ø–∏—Å—å–º–∞) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, 
            –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–µ–ª–µ–≤–∞–Ω—Ç–µ–Ω –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        </p>
    </div>
    """, unsafe_allow_html=True)
    
    row2_cols = st.columns([3, 2])
    
    with row2_cols[0]:
        additional_files_uploader = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã",
            type=["pdf", "docx", "txt"],
            key="additional_uploader",
            accept_multiple_files=True,
            label_visibility="collapsed"
        )
        
        if additional_files_uploader:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á "additional"
            if "additional" not in st.session_state.uploaded_files or not isinstance(st.session_state.uploaded_files["additional"], list):
                st.session_state.uploaded_files["additional"] = []
                
            for add_file in additional_files_uploader:
                file_extension = os.path.splitext(add_file.name)[1].lower()
                unique_filename = f"add_{uuid.uuid4().hex}{file_extension}"
                file_path = upload_dir / unique_filename
                file_utils.save_uploaded_file(add_file, file_path)
                
                st.session_state.uploaded_files["additional"].append({
                    "original_name": add_file.name,
                    "file_path": str(file_path),
                    "extension": file_extension
                })
            
            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {len(additional_files_uploader)}")
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    with row2_cols[1]:
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –≤–∞–∂–Ω–æ—Å—Ç–∏
        st.markdown("""
        <div style='background-color: #f0f9ff; padding:10px; border-radius:5px; border-left:3px solid #2E75D6; margin-bottom:10px;'>
            <strong>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</strong> - 
            <span style='color:#1A1E3A;'>—ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏–º–µ—é—Ç <u>—Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å</u> –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ –∏ –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–µ!</span>
        </div>
        """, unsafe_allow_html=True)
        
        additional_text = st.text_area(
            "–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ–ø—ã—Ç–µ, –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—è—Ö –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –≤–∞–∂–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–∞—Ö",
            height=150,
            key="additional_text_input",
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ–ø—ã—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–æ–≤, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è, –æ–±—Å—É–∂–¥–∞–≤—à–∏–µ—Å—è –≤–Ω–µ –¢–ó..."
        )
        
        if additional_text:
            text_filename = f"additional_text_{uuid.uuid4().hex}.txt"
            text_file_path = upload_dir / text_filename
            
            with open(text_file_path, "w", encoding="utf-8") as f:
                f.write(additional_text)
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á "additional"
            if "additional" not in st.session_state.uploaded_files or not isinstance(st.session_state.uploaded_files["additional"], list):
                st.session_state.uploaded_files["additional"] = []
                
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—â–µ –æ–¥–∏–Ω "—Ñ–∞–π–ª"
            st.session_state.uploaded_files["additional"].append({
                "original_name": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç",
                "file_path": str(text_file_path),
                "extension": ".txt"
            })
            st.success("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∫–Ω–æ–ø–∫–æ–π
    uploaded_tz = st.session_state.uploaded_files.get("tz") is not None
    uploaded_kp = len(st.session_state.uploaded_files.get("kp", [])) > 0
    
    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
    st.divider()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π
    status_cols = st.columns([1, 1, 1])
    with status_cols[0]:
        st.markdown(f"""
        <div style='text-align: center; padding: 8px; border-radius: 5px; background-color: {"#ecfdf5" if uploaded_tz else "#fee2e2"};'>
            <p style='margin:0; font-size: 0.9rem; color: {"#065f46" if uploaded_tz else "#b91c1c"};'>
                {'‚úÖ' if uploaded_tz else '‚ùå'} –¢–ó: {'–∑–∞–≥—Ä—É–∂–µ–Ω–æ' if uploaded_tz else '–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}
            </p>
        </div>
        """, unsafe_allow_html=True)
    
    with status_cols[1]:
        st.markdown(f"""
        <div style='text-align: center; padding: 8px; border-radius: 5px; background-color: {"#ecfdf5" if uploaded_kp else "#fee2e2"};'>
            <p style='margin:0; font-size: 0.9rem; color: {"#065f46" if uploaded_kp else "#b91c1c"};'>
                {'‚úÖ' if uploaded_kp else '‚ùå'} –ö–ü: {'–∑–∞–≥—Ä—É–∂–µ–Ω–æ ' + str(len(st.session_state.uploaded_files.get("kp", []))) if uploaded_kp else '–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'}
            </p>
        </div>
        """, unsafe_allow_html=True)
    
    with status_cols[2]:
        has_additional = len(st.session_state.uploaded_files.get("additional", [])) > 0
        st.markdown(f"""
        <div style='text-align: center; padding: 8px; border-radius: 5px; background-color: {"#ecfdf5" if has_additional else "#f8fafc"};'>
            <p style='margin:0; font-size: 0.9rem; color: {"#065f46" if has_additional else "#64748b"};'>
                {'‚úÖ' if has_additional else 'üîπ'} –î–æ–ø: {'–∑–∞–≥—Ä—É–∂–µ–Ω–æ ' + str(len(st.session_state.uploaded_files.get("additional", []))) if has_additional else '–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ'}
            </p>
        </div>
        """, unsafe_allow_html=True)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ (—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –±–æ–ª–µ–µ –∑–∞–º–µ—Ç–Ω–∞—è)
    st.markdown("<div style='height: 20px;'></div>", unsafe_allow_html=True)
    col1, col2, col1 = st.columns([1, 2, 1])
    
    with col2:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ –∫–ª—é—á–∞–º
        analysis_disabled = not uploaded_tz or not uploaded_kp
        
        if analysis_disabled:
            st.info("‚ö†Ô∏è –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¢–ó –∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ö–ü")
        
        analyze_btn = st.button(
            "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –ö–ü",
            use_container_width=True, 
            disabled=analysis_disabled,
            type="primary"
        )
        
        if analyze_btn:
            st.session_state.run_full_analysis = True
            st.session_state.all_analysis_results = []
            st.session_state.analysis_result = None 
            st.session_state.ratings = {} 
            # st.session_state.comments = {} # comments –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —à–∏—Ä–æ–∫–æ
            
            st.session_state.current_step = "analysis"
            st.rerun() 